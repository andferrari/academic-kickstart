<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>julia | Andr√© Ferrari</title>
    <link>https://andferrari.github.io/tags/julia/</link>
      <atom:link href="https://andferrari.github.io/tags/julia/index.xml" rel="self" type="application/rss+xml" />
    <description>julia</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 01 Mar 2021 10:56:39 +0100</lastBuildDate>
    <image>
      <url>https://andferrari.github.io/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_2.png</url>
      <title>julia</title>
      <link>https://andferrari.github.io/tags/julia/</link>
    </image>
    
    <item>
      <title>Conv. rate with Pluto üéà</title>
      <link>https://andferrari.github.io/post/cvx_speed/</link>
      <pubDate>Mon, 01 Mar 2021 10:56:39 +0100</pubDate>
      <guid>https://andferrari.github.io/post/cvx_speed/</guid>
      <description>&lt;p&gt;Convergence rate vs Hessian condition number using a &lt;a href=&#34;https://github.com/fonsp/Pluto.jl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pluto.jl&lt;/a&gt; notebook:
&lt;img src=&#34;conv.gif&#34; alt=&#34;sigmoid_fit&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;using Plots, LinearAlgebra, PlutoUI
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;begin
  f(x) = x[1]^2 + Œ≥*x[2]^2
  ‚àáf(x) = [2*x[1], 2*Œ≥*x[2]]
  opt_step(x, Œî) = - (x[1]*Œî[1] + Œ≥*x[2]*Œî[2])/(Œî[1]^2 + Œ≥*Œî[2]^2)

  function grad_desc(; n_itermax = 40, x0 = [10, 1], œµ = 1e-1)
    x = zeros(2, n_itermax)
    x[:,1] = x0
    k = 1
    while (norm(‚àáf(x[:,k])) &amp;gt; œµ) &amp;amp;&amp;amp; (k &amp;lt; n_itermax)
        Œî = - ‚àáf(x[:,k])
        x[:, k+1] = x[:, k] + opt_step(x[:,k], Œî)*Œî
        k += 1
    end
    x, k
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;@bind Œ≥ Slider(1:0.1:15, default=5)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;begin	
x, k_max = grad_desc()
x1_, x2_ = LinRange(-10, 10, 64), LinRange(-5, 5, 64)
contour(x1_, x2_, (x,y)-&amp;gt;f([x, y]), xl=&amp;quot;x‚ÇÅ&amp;quot;, yl= &amp;quot;x‚ÇÇ&amp;quot;, rat=:equal, cb=false);
plot!(x[1, 1:k_max], x[2,1:k_max], m=:circle, label=&amp;quot;&amp;quot;)
title!(&amp;quot;f(x) = x‚ÇÅ¬≤ + $Œ≥.x‚ÇÇ¬≤,  $(k_max-1) iterations&amp;quot;, titlefontsize=10)
end
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Sigmoid fit</title>
      <link>https://andferrari.github.io/post/sigmoid/</link>
      <pubDate>Wed, 22 Apr 2020 14:34:20 +0200</pubDate>
      <guid>https://andferrari.github.io/post/sigmoid/</guid>
      <description>&lt;p&gt;Inspired by the nice &lt;a href=&#34;https://twitter.com/clcrozier/status/1251148890595708938?s=21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tweet&lt;/a&gt; of Constance Crozier,
here is the julia code to illustrate the fit of a sigmoid as a function of the number of samples.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;sigmoid_fit.gif&#34; alt=&#34;sigmoid_fit&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;using Plots, LsqFit

@. œÉ(x, Œ∏) = Œ∏[1]/(1 + exp(-Œ∏[2]*x))

x_plot = range(-6,stop=6,length=128)
y_plot = œÉ(x_plot, [1, 1])

n = 32
xdata = range(-6,stop=6,length=n)
ydata = œÉ(xdata, [1 1]) + 0.05*randn(n)

anim = @animate for i in 2:n
    Œ∏_est = coef(curve_fit(œÉ, xdata[1:i], ydata[1:i], [1.0, 1.0]))
    
    plot(x_plot, y_plot, label=&amp;quot;True&amp;quot;, legend=:bottomright, ylims=(-0.25, 1.25), w=3)
    scatter!(xdata[1:i], ydata[1:i], label=&amp;quot;&amp;quot;, ms = 5)
    scatter!(xdata[i+1:end], ydata[i+1:end], label=&amp;quot;&amp;quot;, mc = :lightgray, ms = 5)
    plot!(x_plot, œÉ(x_plot, Œ∏_est) , label=&amp;quot;Estimated&amp;quot;, w=2)
    vline!([xdata[i]], label=&amp;quot;&amp;quot;, w=2)
end
gif(anim, &amp;quot;sigmoid_fit.gif&amp;quot;, fps = 10)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
